%YAML:1.0

#--------------------------------------------------------------------------------------------
# Camera Parameters. Adjust them!
#--------------------------------------------------------------------------------------------
Camera.type: "PinHole"

# Camera calibration and distortion parameters (OpenCV) 
# I get it from the topic of /zed2/zed_node/left/camera_info.
Camera.fx: 537.24087742
Camera.fy: 538.07281707
Camera.cx: 486.36227803
Camera.cy: 243.53164088

# I use the rectification images, so set these with zeros.
Camera.k1: 0.28677538
Camera.k2: -0.26685471
Camera.p1: 1.49594027
Camera.p2: -1.48713362

Camera.width: 960
Camera.height: 540

# Camera frames per second 
Camera.fps: 30.0

# IR projector baseline times fx (aprox.)
# I get it from the topic of /zed2/zed_node/right/camera_info with P(4).
Camera.bf: 64.62

# Color order of the images (0: BGR, 1: RGB. It is ignored if images are grayscale)
Camera.RGB: 0

# Close/Far threshold. Baseline times.
ThDepth: 40.0

# Deptmap values factor
DepthMapFactor: 1.0

# Transformation from camera 0 to body-frame (imu)
# I get it from topic of /zed2/zed_node/left_cam_imu_transform, and it seems more precise with STARTER CONSOLE information "Camera-IMU Transform" 
# Tbc: !!opencv-matrix
#    rows: 4
#    cols: 4
#    dt: f
#    data: [0.999956756829, 0.00843152806614, 0.00392349541458, -0.00200000009499,
#           -0.0084334428508, 0.99996540322, 0.000471741896564, -0.02300000377,
#           -0.00391937794561, -0.000504810067849, 0.999992191792, -0.00200000009499,
#          0.0, 0.0, 0.0, 1.0]

# Tbc: !!opencv-matrix
#    rows: 4
#    cols: 4
#    dt: f
#    data: [-0.00843153,  -0.0039235,     0.999957, -0.00200000009499,
#           -0.999965,    -0.000471742,  -0.00843344, -0.02300000377,
#            0.00050481,  -0.999992,     -0.00391938, -0.00200000009499,
#          0.0, 0.0, 0.0, 1.0]

Tbc: !!opencv-matrix
   rows: 4
   cols: 4
   dt: f
   data: [-0.00843153,   0.999957,    0.0039235, -0.00200000009499,
          -0.999965,    -0.00843344,  0.000471742, -0.02300000377,
           0.00050481,  -0.00391938,  0.999992, -0.00200000009499,
         0.0, 0.0, 0.0, 1.0]
 
 
 
 
 
 

# 0.999956756829 0.00843152806614 0.00392349541458; -0.0084334428508 0.99996540322 0.000471741896564; -0.00391937794561 -0.000504810067849 0.999992191792

#  [[0,0,1],[-1,0,0],[0,-1 ,0]],
# IMU noise
# I get it from Project of **zed-examples/tutorials/tutorial 7 - sensor data/**.
IMU.NoiseGyro: 0.007 # 1.6968e-04 
IMU.NoiseAcc:  0.0016 # 2.0000e-3
IMU.GyroWalk:  0.0019474 
IMU.AccWalk:   0.0002509 # 3.0000e-3
IMU.Frequency: 400

#--------------------------------------------------------------------------------------------
# Stereo Rectification. Only if you need to pre-rectify the images.
# Camera.fx, .fy, etc must be the same as in LEFT.P
#--------------------------------------------------------------------------------------------
LEFT.width: 960
LEFT.height: 540
LEFT.D: !!opencv-matrix
   rows: 1
   cols: 5
   dt: d
   data: [0.0, 0.0, 0.0, 0.0, 0.0]
LEFT.K: !!opencv-matrix
   rows: 3
   cols: 3
   dt: d
   data: [572.2256469726562, 0.0, 562.0844116210938, 0.0, 572.2256469726562, 312.9067687988281, 0.0, 0.0, 1.0]
LEFT.R:  !!opencv-matrix
   rows: 3
   cols: 3
   dt: d
   data: [1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0]
LEFT.Rf:  !!opencv-matrix
   rows: 3
   cols: 3
   dt: f
   data: [1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0]
LEFT.P:  !!opencv-matrix
   rows: 3
   cols: 4
   dt: d
   data: [572.2256469726562, 0.0, 562.0844116210938, 0.0, 0.0, 572.2256469726562, 312.9067687988281, 0.0, 0.0, 0.0, 1.0, 0.0]

RIGHT.width: 960
RIGHT.height: 540
RIGHT.D: !!opencv-matrix
   rows: 1
   cols: 5
   dt: d
   data: [0.0, 0.0, 0.0, 0.0, 0.0]
RIGHT.K: !!opencv-matrix
   rows: 3
   cols: 3
   dt: d
   data: [572.2256469726562, 0.0, 562.0844116210938, 0.0, 572.2256469726562, 312.9067687988281, 0.0, 0.0, 1.0]
RIGHT.R:  !!opencv-matrix
   rows: 3
   cols: 3
   dt: d
   data: [1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0]
RIGHT.P:  !!opencv-matrix
   rows: 3
   cols: 4
   dt: d
   data: [572.2256469726562, 0.0, 562.0844116210938, -68.55672454833984, 0.0, 572.2256469726562, 312.9067687988281, 0.0, 0.0, 0.0, 1.0, 0.0]

#--------------------------------------------------------------------------------------------
# ORB Parameters
#--------------------------------------------------------------------------------------------

# ORB Extractor: Number of features per image
ORBextractor.nFeatures: 1200

# ORB Extractor: Scale factor between levels in the scale pyramid 	
ORBextractor.scaleFactor: 1.2

# ORB Extractor: Number of levels in the scale pyramid	
ORBextractor.nLevels: 8

# ORB Extractor: Fast threshold
# Image is divided in a grid. At each cell FAST are extracted imposing a minimum response.
# Firstly we impose iniThFAST. If no corners are detected we impose a lower value minThFAST
# You can lower these values if your images have low contrast			
ORBextractor.iniThFAST: 20
ORBextractor.minThFAST: 7

#--------------------------------------------------------------------------------------------
# Viewer Parameters
#--------------------------------------------------------------------------------------------
Viewer.KeyFrameSize: 0.05
Viewer.KeyFrameLineWidth: 1
Viewer.GraphLineWidth: 0.9
Viewer.PointSize: 2
Viewer.CameraSize: 0.08
Viewer.CameraLineWidth: 3
Viewer.ViewpointX: 0
Viewer.ViewpointY: -0.7
Viewer.ViewpointZ: -1.8
Viewer.ViewpointF: 500
