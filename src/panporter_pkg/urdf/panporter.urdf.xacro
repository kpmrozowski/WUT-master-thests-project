<?xml version="1.0"?>
<robot name="panporter" xmlns:xacro="http://www.ros.org/wiki/xacro">

<!-- * * * link definitions * * * -->
  <link name="base_footprint"/>

  <joint name="base_joint" type="fixed">
    <pose>0 0 0.36 0 0 0</pose>
    <parent link="base_footprint"/>
    <child link="robot_cover" />
    <origin xyz="0 0 0.010" rpy="0 0 0"/>
  </joint>

  <link name="robot_cover">
    <pose>0 0 0.35 0 0 0</pose>
    <visual>
      <geometry>
        <mesh filename="package://panporter_pkg/meshes/robot_parts/robot_cover.stl" scale="1.0 1.0 1.0"/>
      </geometry>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <material name="yellow">
        <color rgba="1 1 0 0.4"/>
      </material>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://panporter_pkg/meshes/robot_parts/robot_cover.stl" scale="1.0 1.0 1.0"/>
      </geometry>
      <material name="yellow">
        <color rgba="1 1 0 0.4"/>
      </material>
    </collision>
    <inertial>
	    <mass value="10.0"/>
  <!-- izz=skrecanie, iyy=obracanie_bebnem, ixx=pochylanie_na_boki -->
	    <inertia ixx="0.358333333" ixy="0.0" ixz="0.0" iyy="0.358333333" iyz="0.0" izz="0.450"/>
      <origin rpy="0 0 0" xyz="0 0 -0.1"/>
    </inertial>
  </link>

  <!-- <gazebo reference="robot_cover">
    <kp> 1000000.0</kp>
    <kd> 0.0 </kd>
    <mu1> 10.0 </mu1>
    <mu2> 10.0 </mu2>
  </gazebo> -->

  <link name="prism_left_link">
    <pose>0 0 0.35 0 0 0</pose>
    <visual>
      <geometry>
	      <cylinder length="0.2" radius="0.02"/>
      </geometry>
      <origin rpy="0 -1.570796327 0" xyz="0 0 0"/>
      <!-- <material name="blue">
        <color rgba="0 0 1 1"/>
      </material> -->
    </visual>
    <collision>
      <geometry>
	      <cylinder length="0.2" radius="0.02"/>
      </geometry>
      <origin rpy="0 -1.570796327 0" xyz="0 0 0"/>
    </collision>
    <inertial>
	    <mass value="0.5"/>
	    <inertia ixx="0.001716667" ixy="0.0" ixz="0.0" iyy="0.001716667" iyz="0.0" izz="0.1"/>
    </inertial>
  </link>

  <link name="prism_right_link">
    <pose>0 0 0.35 0 0 0</pose>
    <visual>
      <geometry>
	      <cylinder length="0.2" radius="0.02"/>
      </geometry>
      <origin rpy="0 1.570796327 0" xyz="0 0 0"/>
      <!-- <material name="blue">
        <color rgba="0 0 1 1"/>
      </material> -->
    </visual>
    <collision>
      <geometry>
	      <cylinder length="0.2" radius="0.02"/>
      </geometry>
      <origin rpy="0 -1.570796327 0" xyz="0 0 0"/>
    </collision>
    <inertial>
	    <mass value="0.5"/>
	    <inertia ixx="0.001716667" ixy="0.0" ixz="0.0" iyy="0.001716667" iyz="0.0" izz="0.1"/>
    </inertial>
  </link>

  <joint name="prism_right_blue_joint" type="fixed">
    <parent link="prism_left_link"/>
    <child link="prism_right_link"/>
    <origin xyz="0 -0.4 0"/>
  </joint>

  <joint name="prism_joint" type="prismatic">
    <parent link="robot_cover"/>
    <child link="prism_left_link"/>
    <origin rpy="0 0 0" xyz="0 0.2 0"/>
    <axis xyz="-1 0 0" />
    <limit effort="3000" velocity="50.0" lower="-0.5" upper="0.5"/>
    <safety_controller k_position="20" k_velocity="20" soft_lower_limit="-0.45" soft_upper_limit="0.45"/>
    <dynamics damping="0.01" friction="0.1"/>
  </joint>

  <!-- <joint name="spring_joint" type="prismatic">
    <parent link="base_link"/>
    <child link="prism_right_link"/>
    <origin xyz="0 -0.2 0"/>
    <axis> 
      <xyz>1 0 0</xyz>
      <limit lower="-0.001" upper="0.001"/>
      <safety_controller k_position="20" k_velocity="20" soft_lower_limit="-0.15" soft_upper_limit="0.15"/>
      <dynamics spring_stiffness="250" spring_reference="0.06" damping="0.1" friction="0.75"/>
      <use_parent_model_frame>0</use_parent_model_frame>
      <dynamics damping="0.1" friction="1.0"/>
    <axis/>
    <physics>
      <ode>
        <implicit_spring_damper>1</implicit_spring_damper>
        <cfm_damping>1</cfm_damping>
        <limit>
          <cfm>0</cfm>
          <erp>0.2</erp>
        </limit>
      </ode>
    </physics>
  </joint> -->

  <transmission name="prism_trans">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="prism_joint">
      <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
    </joint>
    <actuator name="prism_motor">
      <mechanicalReduction>1</mechanicalReduction>
      <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
    </actuator>
  </transmission>

  <link name="wheel_left_link">
    <pose>0 0 0.35 0 0 0</pose>
    <visual>
      <geometry>
        <mesh filename="package://panporter_pkg/meshes/robot_parts/wheel2.stl" scale="0.001 0.001 0.001"/>
      </geometry>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <!-- <material name="red">
        <color rgba="1 0 0 0.4"/>
      </material> -->
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://panporter_pkg/meshes/robot_parts/wheel2.stl" scale="0.001 0.001 0.001"/>
      </geometry>
      <surface></surface>
    </collision>
    <inertial>
	    <mass value="1"/>
	    <inertia ixx="0.07945" ixy="0.0" ixz="0.01" iyy="0.1389" iyz="0.0" izz="0.07945"/>
    </inertial>
  </link>

  <joint name="wheel_left_joint" type="continuous">
    <parent link="prism_left_link"/>
    <child link="wheel_left_link"/>
    <origin rpy="0 0 0" xyz="0 0.1 0"/>
    <axis xyz="0 1 0" />
    <limit effort="500" velocity="1000"/>
    <dynamics damping="0.1" friction="0.1"/>
  </joint>

  <transmission name="wheel_left_trans">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="wheel_left_joint">
      <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
    </joint>
    <actuator name="wheel_left_motor">
      <mechanicalReduction>10</mechanicalReduction>
      <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
    </actuator>
  </transmission>


  <link name="wheel_right_link">
    <pose>0 0 0.35 0 0 0</pose>
    <visual>
      <geometry>
        <mesh filename="package://panporter_pkg/meshes/robot_parts/wheel2.stl" scale="0.001 0.001 0.001"/>
      </geometry>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <!-- <material name="red">
        <color rgba="1 0 0 0.4"/>
      </material> -->
    </visual>
    <collision>
      <geometry>
        <mesh filename="package://panporter_pkg/meshes/robot_parts/wheel2.stl" scale="0.001 0.001 0.001"/>
      </geometry>
      <origin rpy="0 0 0" xyz="0 0 0"/>
    </collision>
    <inertial>
	    <mass value="1"/>
	    <inertia ixx="0.07945" ixy="0.0" ixz="0.01" iyy="0.1389" iyz="0.0" izz="0.07945"/>
    </inertial>
  </link>

  <joint name="wheel_right_joint" type="continuous">
    <parent link="prism_right_link"/>
    <child link="wheel_right_link"/>
    <origin rpy="0 0 0" xyz="0 -0.1 0"/>
    <axis xyz="0 1 0" />
    <limit effort="500" velocity="1000"/> <!-- lower="-1.570796327" upper="1.570796327"/> 6.283-->
    <dynamics damping="0.01" friction="0.1"/>
  </joint>

  <transmission name="wheel_right_trans">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="wheel_right_joint">
      <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
    </joint>
    <actuator name="wheel_right_motor">
      <mechanicalReduction>10</mechanicalReduction>
      <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
    </actuator>
  </transmission>


  <joint name="imu_joint" type="fixed">
    <parent link="robot_cover"/>
    <child link="imu_link"/>
    <origin xyz="0.0 0 0.068" rpy="0 0 0"/>
  </joint>

  <link name="imu_link"/>

  <joint name="scan_joint" type="fixed">
    <parent link="robot_cover"/>
    <child link="base_scan"/>
    <origin xyz="0 0 -0.045" rpy="0 0 0"/>
  </joint>

  <link name="base_scan">
    <visual>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
        <mesh filename="package://panporter_pkg/meshes/sensors/lds.stl" scale="0.001 0.001 0.001"/>
      </geometry>
      <material name="dark"/>
    </visual>
    <collision>
      <origin xyz="0.015 0 -0.0065" rpy="0 0 0"/>
      <geometry>
        <cylinder length="0.0315" radius="0.055"/>
      </geometry>
    </collision>
    <inertial>
      <mass value="0.114" />
      <origin xyz="0 0 0" />
      <inertia ixx="0.001" ixy="0.0" ixz="0.0"
               iyy="0.001" iyz="0.0"
               izz="0.001" />
    </inertial>
  </link>

  <joint name="camera_joint" type="fixed">
    <origin xyz="0.2 0 0.2" rpy="0 0 0"/>
    <parent link="robot_cover"/>
    <child link="camera_link"/>
  </joint>

  <link name="camera_link">
    <visual>
      <origin xyz="0 0 0" rpy="1.570796327 0 1.570796327"/>
      <geometry>
       <!-- <mesh filename="package://turtlebot3_gazebo/models/kinect/meshes/kinect.dae" /> -->
       <mesh filename="package://panporter_pkg/meshes/sensors/zed2.dae"/>
      </geometry>
    </visual>
    <collision>
      <origin xyz="0 0 0" rpy="0 0 1.570796327"/>
      <geometry>
        <box size="0.012 0.132 0.020"/>
      </geometry>
    </collision>
    <!-- This inertial field needs doesn't contain reliable data!! -->
<!--   <inertial>
      <mass value="0.564" />
      <origin xyz="0 0 0" />
      <inertia ixx="0.003881243" ixy="0.0" ixz="0.0"
               iyy="0.000498940" iyz="0.0"
               izz="0.003879257" />
    </inertial>-->
  </link>

  <gazebo>
    <plugin filename="libgazebo_ros_diff_drive.so" name="differential_drive_controller">
      <alwaysOn>true</alwaysOn>
      <updateRate>100</updateRate>
      <leftJoint>wheel_left_joint</leftJoint>
      <rightJoint>wheel_right_joint</rightJoint>
      <torque>5</torque>
      <wheelSeparation>0.4</wheelSeparation>
      <wheelDiameter>0.7</wheelDiameter>
      <commandTopic>cmd_vel</commandTopic>
      <odometryTopic>odom</odometryTopic>
      <odometryFrame>odom</odometryFrame>
      <odometrySource>world</odometrySource>
      <robotBaseFrame>base_footprint</robotBaseFrame>
      <publishTf>true</publishTf>
      <publishOdomTF>true</publishOdomTF>
      <publishWheelTF>true</publishWheelTF>
      <publishWheelJointState>true</publishWheelJointState>
      <wheelAcceleration>0</wheelAcceleration>
      <wheelTorque>5</wheelTorque>
      <rosDebugLevel>na</rosDebugLevel>
      <legacyMode>true</legacyMode>
    </plugin>
  </gazebo>

  <gazebo>
    <plugin name="gazebo_ros_control" filename="libgazebo_ros_control.so">
      <robotNamespace>/panporter</robotNamespace>
      <robotSimType>gazebo_ros_control/DefaultRobotHWSim</robotSimType>
      <controlPeriod>0.001</controlPeriod>
      <legacyModeNS>false</legacyModeNS>
    </plugin>
    <plugin name='gazebo_ros_imu' filename='libhector_gazebo_ros_imu.so'>
      <robotNamespace>/panporter</robotNamespace>
      <alwaysOn>true</alwaysOn>
      <updateRate>200.0</updateRate>
      <bodyName>robot_cover</bodyName>
      <topicName>/imu_bosch/data_raw</topicName>
      <gaussianNoise>0.02</gaussianNoise>
      <xyzOffsets>0 0 0</xyzOffsets>
      <rpyOffsets>0 0 0</rpyOffsets>
    </plugin>
  </gazebo>

  <!-- robot_cover -->
	<gazebo reference="robot_cover">
		<material value="Gazebo/Yellow"/>
    <mu1>100.0</mu1>
    <mu2>100.0</mu2>
	</gazebo>

  <!-- prism_left_link -->
	<gazebo reference="prism_left_link">
		<material value="Gazebo/Blue"/>
	</gazebo>

  <!-- prism_right_link -->
	<gazebo reference="prism_right_link">
		<material value="Gazebo/Blue"/>
	</gazebo>

  <!-- wheel_left_link -->
	<gazebo reference="wheel_left_link">
		<material value="Gazebo/Red"/>
    <mu1>0.7</mu1>
    <mu2>0.7</mu2>
    <minDepth>0.001</minDepth>
    <kp>40000000.0</kp>
    <kd>0.5</kd>
	</gazebo>

  <!-- wheel_right_link -->
	<gazebo reference="wheel_right_link">
		<material value="Gazebo/Green"/>
    <mu1>0.7</mu1>
    <mu2>0.7</mu2>
    <minDepth>0.005</minDepth>
    <kp>40000000.0</kp>
    <kd>0.5</kd>
	</gazebo>

  <gazebo>
    <plugin name="imu_plugin" filename="libgazebo_ros_imu.so">
      <robotNamespace>/panporter</robotNamespace>
      <alwaysOn>true</alwaysOn>
      <bodyName>imu_link</bodyName>
      <frameName>imu_link</frameName>
      <topicName>imu</topicName>
      <serviceName>imu_service</serviceName>
      <gaussianNoise>0.0</gaussianNoise>
      <updateRate>0</updateRate>
      <imu>
        <noise>
          <type>gaussian</type>
          <rate>
            <mean>0.0</mean>
            <stddev>2e-4</stddev>
            <bias_mean>0.0000075</bias_mean>
            <bias_stddev>0.0000008</bias_stddev>
          </rate>
          <accel>
            <mean>0.0</mean>
            <stddev>1.7e-2</stddev>
            <bias_mean>0.1</bias_mean>
            <bias_stddev>0.001</bias_stddev>
          </accel>
        </noise>
      </imu>
    </plugin>
  </gazebo>

  <gazebo reference="base_scan">
    <material>Gazebo/FlatBlack</material>
    <sensor type="ray" name="lds_lfcd_sensor">
      <pose>0 0 0 0 0 0</pose>
      <visualize>true</visualize>
      <update_rate>5</update_rate>
      <ray>
        <scan>
          <horizontal>
            <samples>360</samples>
            <resolution>1</resolution>
            <min_angle>0.0</min_angle>
            <max_angle>6.28319</max_angle>
          </horizontal>
        </scan>
        <range>
          <min>0.120</min>
          <max>3.5</max>
          <resolution>0.015</resolution>
        </range>
        <noise>
          <type>gaussian</type>
          <mean>0.0</mean>
          <stddev>0.01</stddev>
        </noise>
      </ray>
      <plugin name="gazebo_ros_lds_lfcd_controller" filename="libgazebo_ros_laser.so">
        <topicName>scan</topicName>
        <frameName>base_scan</frameName>
      </plugin>
    </sensor>
  </gazebo>

  <!--link : https://www.raspberrypi.org/documentation/hardware/camera/-->
  <gazebo reference="camera_link"> 
    <sensor type="depth" name="camera">
      <visualize>true</visualize>
      <always_on>true</always_on>
      <update_rate>20.0</update_rate>
      <camera>
        <horizontal_fov>${60.0*2*1.570796327/180.0}</horizontal_fov>
        <image>
          <format>B8G8R8</format>
          <width>640</width>
          <height>480</height>
        </image>
        <clip>
          <near>0.05</near>
          <far>8.0</far>
        </clip>
      </camera> 
      <plugin name="camera_plugin" filename="libgazebo_ros_openni_kinect.so">
        <robotNamespace>/panporter</robotNamespace>
        <baseline>0.1</baseline>
        <alwaysOn>true</alwaysOn>
        <!-- Keep this zero, update_rate in the parent <sensor> tag
          will control the frame rate. -->
        <updateRate>10</updateRate>
        <cameraName>camera</cameraName>
        <imageTopicName>rgb/image_raw</imageTopicName>
        <depthImageTopicName>depth/image_raw</depthImageTopicName>
        <cameraInfoTopicName>rgb/camera_info</cameraInfoTopicName>
        <depthImageCameraInfoTopicName>depth/camera_info</depthImageCameraInfoTopicName>
        <pointCloudTopicName>depth/points</pointCloudTopicName>
        <frameName>robot_cover</frameName>
        <pointCloudCutoff>0.5</pointCloudCutoff>
        <pointCloudCutoffMax>3.0</pointCloudCutoffMax>
        <distortion_k1>0.0</distortion_k1>
        <distortion_k2>0.0</distortion_k2>
        <distortion_k3>0.0</distortion_k3>
        <distortion_t1>0.0</distortion_t1>
        <distortion_t2>0.0</distortion_t2>
        <CxPrime>0</CxPrime>
        <Cx>0</Cx>
        <Cy>0</Cy>
        <focalLength>0</focalLength>
        <hackBaseline>0</hackBaseline>
      </plugin>
    </sensor>
  </gazebo>

</robot>
